import { graphqlClient } from "@/clients/api";
import TwitterLayout from "@/components/Layout/TwitterLayout";
import FeedCard from "@/components/core/Home/FeedCard";
import FollowBtn from "@/components/core/Profile/FollowBtn";
import { getUserByIdQuery } from "@/graphql/query/user";
import { Metadata } from "next";
import Image from "next/image";
import Link from "next/link";
import React from "react";
import { BsArrowLeftShort } from "react-icons/bs";

type Props = {
  params: { slug: string };
  searchParams: { [key: string]: string | string[] | undefined };
};

export const metadata: Metadata = {
  title: "Profile - Twitter",
  description: "Generated by create next app",
};

export const revalidate = 1;

const page = async ({ params, searchParams }: Props) => {
  if (!params.slug) return null;
  const userInfo = await graphqlClient.request(getUserByIdQuery, {
    id: params.slug,
  });
  if (!userInfo) return null;
  const user = userInfo?.getUserById;

  return (
    <TwitterLayout>
      <div>
        <nav className="flex items-center gap-3 p-3">
          <Link href={"/"}>
            <BsArrowLeftShort className="text-4xl" />
          </Link>

          <div>
            <h1 className="text-2xl font-bold">{`${user?.firstName} ${user?.lastName}`}</h1>
            <h3 className="text-md font-bold text-slate-500">
              {user?.tweets?.length} Tweets
            </h3>
          </div>
        </nav>

        <div className="p-4 border-b border-slate-800">
          {user?.profileImageURL && (
            <Image
              src={user?.profileImageURL}
              alt="user-Image"
              width={100}
              height={100}
              className="rounded-full"
            />
          )}
          <h1 className="text-2xl font-bold mt-5">{`${user?.firstName} ${user?.lastName}`}</h1>
          <div className="flex justify-between">
          <div className="flex gap-2 mt-4 text-gray-400">
            <span>{user?.follower?.length} follower</span>
            <span>{user?.following?.length} following</span>
          </div>
            <FollowBtn userId={params.slug} userInfo={user}/>
          </div>
        
        </div>
        <div>
          {user?.tweets?.map((tweet: any) => (
            <FeedCard key={tweet?.id} tweet={tweet} />
          ))}
        </div>
      </div>
    </TwitterLayout>
  );
};

export default page;
